{"version":3,"sources":["App/AppWrapper/EntryContainer/Entry/EntryRow/ToggleButton/ToggleButton.js","App/AppWrapper/EntryContainer/Entry/EntryRow/ToggleExpandButton/ToggleExpandButton.js","App/AppWrapper/EntryContainer/Entry/EntryRow/EntryContent/EntryContent.js","App/AppWrapper/EntryContainer/Entry/EntryRow/EntryRow.js","App/AppWrapper/EntryContainer/Entry/EntrySubmenu/EntrySubmenu.js","App/AppWrapper/EntryContainer/Entry/Entry.js","App/AppWrapper/EntryContainer/EntryContainer.js","App/AppWrapper/InputComponent/InputComponent.js","App/AppWrapper/AppWrapper.js","App/App.js","serviceWorker.js","index.js"],"names":["ToggleButton","props","isChecked","className","onClick","e","entryToggleHandler","idx","ToggleExpandButton","isExpanded","entryExpandHandler","EntryContent","content","EntryRow","onTouchMove","entryMousemoveHandler","onMouseMove","onMouseDown","entryMousedownHandler","onTouchStart","EntrySubmenu","TextField","id","variant","placeholder","React","Component","Entry","forwardRef","ref","isFirst","isLast","EntryContainer","Box","height","this","map","val","key","length","bind","InputComponent","minHeight","autoFocus","fullWidth","onChange","onChangeHandler","onKeyPress","onKeyPressHandler","AppWrapper","state","value","entryList","mouseDownIndex","handleEntryMousedown","handleEntryMousemove","handleEntryMouseup","handleEntryToggle","handleEntryExpand","handleFieldInputChange","doSubmit","setState","type","preventDefault","forEach","elIdx","x","y","x1","y1","w","h","boundingRect","current","getBoundingClientRect","touches","pageX","pageY","left","top","width","temp","console","log","checked","expanded","target","which","concat","createRef","Container","style","padding","maxWidth","onMouseUp","onTouchEnd","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","basename","process","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1c7e9aa6.chunk.js","sourcesContent":["import React from 'react';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\nfunction ToggleButton(props) {\r\n    if (props.isChecked) {\r\n        return (\r\n            <div className={`ToggleButton\r\n                ${props.isChecked ? 'ToggleButton-checked' : ''}`}\r\n                onClick={(e) => props.entryToggleHandler(e,props.idx,props.isChecked)}>\r\n                    <CheckCircleOutlineIcon></CheckCircleOutlineIcon>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div className={`ToggleButton\r\n                ${props.isChecked ? 'ToggleButton-checked' : ''}`}\r\n                onClick={(e) => props.entryToggleHandler(e,props.idx,props.isChecked)}>\r\n                    <RadioButtonUncheckedIcon></RadioButtonUncheckedIcon>\r\n            </div>\r\n        );\r\n    }\r\n    // <div className={`ToggleButton\r\n    //     ${props.checked ? 'ToggleButton-checked' : ''}`}\r\n    //     onClick={(e) => props.toggleHandler(e,props.idx,props.checked)}></div>\r\n}\r\n\r\nexport default ToggleButton;","import React from 'react';\r\nimport './ToggleExpandButton.css';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\n\r\nfunction ToggleExpandButton(props) {\r\n\r\n    if (props.isExpanded) {\r\n        return (\r\n            <ExpandLessIcon className=\"Entry-expand-submenu\"\r\n            onClick={(e) => props.entryExpandHandler(e,props.idx,props.isExpanded)}></ExpandLessIcon>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <ExpandMoreIcon className=\"Entry-expand-submenu\"\r\n            onClick={(e) => props.entryExpandHandler(e,props.idx,props.isExpanded)}></ExpandMoreIcon>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ToggleExpandButton;","import React from 'react';\r\n\r\nfunction EntryContent(props) {\r\n    return (\r\n        <span className=\"EntryContent\">{props.content}</span>\r\n    );\r\n}\r\n\r\nexport default EntryContent;","import React from 'react';\r\nimport DragHandleIcon from '@material-ui/icons/DragHandle';\r\nimport ToggleButton from './ToggleButton/ToggleButton.js';\r\nimport ToggleExpandButton from './ToggleExpandButton/ToggleExpandButton.js';\r\nimport EntryContent from './EntryContent/EntryContent.js';\r\nimport './EntryRow.css';\r\n\r\nconst EntryRow = (props) => (//React.forwardRef((props, ref) => (\r\n  <div\r\n    className={`EntryRow\r\n    ${props.isExpanded ? 'EntryRow-expanded' : ''}`}\r\n    \r\n    onTouchMove={(e) => props.entryMousemoveHandler(e,props.idx)}\r\n    onMouseMove={(e) => props.entryMousemoveHandler(e,props.idx)}>\r\n      <ToggleButton entryToggleHandler={props.entryToggleHandler}\r\n      isChecked={props.isChecked} idx={props.idx}/>\r\n      <EntryContent content={props.content} />\r\n      <DragHandleIcon className=\"Entry-drag-handle\"\r\n        onMouseDown={(e) => props.entryMousedownHandler(e,props.idx)}\r\n        onTouchStart={(e) => props.entryMousedownHandler(e,props.idx)}\r\n        ></DragHandleIcon>\r\n        <ToggleExpandButton\r\n        entryExpandHandler={props.entryExpandHandler}\r\n        isExpanded={props.isExpanded}\r\n        idx={props.idx}></ToggleExpandButton>\r\n  </div>\r\n);\r\n\r\nexport default EntryRow;","import React from 'react';\r\nimport './EntrySubmenu.css';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass EntrySubmenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"EntrySubmenu\">\r\n                <TextField id=\"standard-basic\" variant=\"standard\" placeholder=\"Detail\"></TextField>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EntrySubmenu;","import React from 'react';\r\nimport EntryRow from './EntryRow/EntryRow.js';\r\nimport EntrySubmenu from './EntrySubmenu/EntrySubmenu.js';\r\nimport './Entry.css';\r\n\r\nconst Entry = React.forwardRef((props, ref) => (\r\n  <div \r\n  className={`Entry noselect \r\n  ${props.isFirst ? 'Entry-first-in-list'  : ''}\r\n  ${props.isLast ? 'Entry-last-in-list ' : ''}\r\n  ${props.isChecked ? 'Entry-checked ' : ''}\r\n  ${props.isExpanded ? 'Entry-expanded ' : ''}`}\r\n  ref={ref}>\r\n    <EntryRow \r\n      entryMousemoveHandler={props.entryMousemoveHandler}\r\n      entryMousedownHandler={props.entryMousedownHandler}\r\n      entryExpandHandler={props.entryExpandHandler}\r\n      entryToggleHandler={props.entryToggleHandler}\r\n      content={props.content}\r\n      isChecked={props.isChecked}\r\n      isExpanded={props.isExpanded}\r\n      idx={props.idx}\r\n      >\r\n    </EntryRow>\r\n    {(props.isExpanded) ? <EntrySubmenu /> : ''}\r\n  </div>\r\n));\r\n\r\nexport default Entry;","import React from 'react';\r\n// import { TransitionGroup } from 'react-transition-group';\r\nimport './EntryContainer.css';\r\nimport Box from '@material-ui/core/Box';\r\nimport Entry from './Entry/Entry.js';\r\n\r\n\r\nclass EntryContainer extends React.Component {\r\n    // constructor(props) {\r\n    //   super(props);\r\n    // }\r\n    render() {\r\n      return (\r\n          <Box className=\"EntryContainer\" height=\"sm\">\r\n            {this.props.content.map(function(val,idx) {\r\n              return (<Entry\r\n                entryMousedownHandler={this.props.entryMousedownHandler}\r\n                entryMousemoveHandler={this.props.entryMousemoveHandler}\r\n                entryToggleHandler={this.props.entryToggleHandler}\r\n                entryExpandHandler={this.props.entryExpandHandler}\r\n                \r\n                content={val.content}\r\n                isChecked={val.isChecked}\r\n                isExpanded={val.isExpanded}\r\n                idx={idx} key={idx}\r\n                isFirst={idx===0} isLast={idx===this.props.content.length-1}\r\n                ref={val.ref}\r\n                ></Entry>);\r\n            }.bind(this))}\r\n          </Box>\r\n      )\r\n    }\r\n}\r\n  \r\nexport default EntryContainer;","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nfunction InputComponent(props) {\r\n  return (\r\n    <Box className=\"InputComponent\" minHeight=\"50px\">\r\n      <TextField autoFocus id=\"outlined-basic\" fullWidth variant=\"outlined\" placeholder=\"New item\"\r\n        onChange={props.onChangeHandler}\r\n        onKeyPress={props.onKeyPressHandler}>\r\n      </TextField>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default InputComponent;","import React from 'react';\r\nimport './AppWrapper.css';\r\nimport Container from '@material-ui/core/Container';\r\nimport EntryContainer from './EntryContainer/EntryContainer.js';\r\nimport InputComponent from './InputComponent/InputComponent.js';\r\n\r\nfunction coordsInRect(x,y,x1,y1,w,h) {\r\n  let x2 = x1+w;\r\n  let y2 = y1+h;\r\n  return (\r\n    (x1 <= x && x2 >= x) &&\r\n    (y1 <= y && y2 >= y)\r\n  );\r\n}\r\n\r\nclass AppWrapper extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        value: '',\r\n        entryList: [],\r\n        mouseDownIndex: null\r\n      };\r\n      this.handleEntryMousedown = this.handleEntryMousedown.bind(this);\r\n      this.handleEntryMousemove = this.handleEntryMousemove.bind(this);\r\n      this.handleEntryMouseup = this.handleEntryMouseup.bind(this);\r\n      this.handleEntryToggle = this.handleEntryToggle.bind(this);\r\n      this.handleEntryExpand = this.handleEntryExpand.bind(this);\r\n      this.handleFieldInputChange = this.handleFieldInputChange.bind(this);\r\n\r\n      //Input\r\n      this.doSubmit = this.doSubmit.bind(this);\r\n    }\r\n\r\n\r\n    //Content Events\r\n    handleEntryMousedown(e,idx) {\r\n      this.setState({\r\n        mouseDownIndex: idx\r\n      });\r\n    }\r\n\r\n    handleEntryMousemove(e,idx) {\r\n      //Due to the nature of touch events, the target of touchmove will only ever refer to the target of the preceding touchstart.\r\n      //If event is coming from a mobile context, redefine idx by computing target element based on touch position\r\n      if (e.type === \"touchmove\") {\r\n        e.preventDefault();\r\n        //Iterate through each element and test if touch position is contained within its bounding rect.\r\n        this.state.entryList.forEach(function(val,elIdx) {\r\n          var boundingRect = val.ref.current.getBoundingClientRect();\r\n          if (coordsInRect(\r\n            e.touches[0].pageX,\r\n            e.touches[0].pageY,\r\n            boundingRect.left,\r\n            boundingRect.top,\r\n            boundingRect.width,\r\n            boundingRect.height)) {\r\n              //If touch is over an element, update idx to reflect this element.\r\n              idx = elIdx;\r\n            }\r\n        });\r\n      }\r\n      \r\n      var mouseDownIndex = this.state.mouseDownIndex;\r\n      if (mouseDownIndex !== null) {\r\n        if (idx !== mouseDownIndex) {\r\n          var temp = this.state.entryList;\r\n          [temp[mouseDownIndex], temp[idx]] = [temp[idx], temp[mouseDownIndex]];\r\n          this.setState({\r\n            entryList: temp,\r\n            mouseDownIndex: idx\r\n          });\r\n        }\r\n        else {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    handleEntryMouseup(e) {\r\n      if (e.type===\"touchcancel\")\r\n        console.log(\"touch canceled\");\r\n      this.setState({\r\n        mouseDownIndex: null\r\n      });\r\n    }\r\n\r\n    \r\n    handleEntryToggle(e,idx,checked) {\r\n      var temp = this.state.entryList;\r\n      temp[idx].isChecked = !checked;\r\n      this.setState({\r\n        entryList: temp\r\n      });\r\n    }\r\n\r\n    handleEntryExpand(e,idx,expanded) {\r\n      console.log(\"called\");\r\n      var temp = this.state.entryList;\r\n      temp[idx].isExpanded = !expanded;\r\n      this.setState({\r\n        entryList: temp\r\n      });\r\n    }\r\n  \r\n\r\n    //Input Events\r\n    handleFieldInputChange(e) {\r\n      this.setState({\r\n        value: e.target.value\r\n      });\r\n    }\r\n  \r\n    doSubmit(e) {\r\n      //Enter pressed\r\n      if (e.which === 13 && this.state.value !== '') {\r\n        this.setState({\r\n          entryList: this.state.entryList.concat({\r\n            content: this.state.value,\r\n            isChecked: false,\r\n            isExpanded: false,\r\n            ref: React.createRef()\r\n          }),\r\n          value: ''\r\n        });\r\n        //Clear input\r\n        e.target.value = '';\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <Container className=\"AppWrapper\"  style={{padding: \"15px\"}} maxWidth=\"sm\"\r\n          onMouseUp={this.handleEntryMouseup}\r\n          onTouchEnd={this.handleEntryMouseup}>\r\n          <EntryContainer\r\n            entryMousedownHandler={this.handleEntryMousedown}\r\n            entryMousemoveHandler={this.handleEntryMousemove}\r\n            entryExpandHandler={this.handleEntryExpand}\r\n            entryToggleHandler={this.handleEntryToggle}\r\n            content={this.state.entryList}>\r\n          </EntryContainer>\r\n          <InputComponent\r\n            onChangeHandler={this.handleFieldInputChange}\r\n            onKeyPressHandler={this.doSubmit}>\r\n          </InputComponent>\r\n        </Container>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default AppWrapper;","import React from 'react';\r\nimport BrowserRouter from 'react-router-dom';\r\nimport AppWrapper from './AppWrapper/AppWrapper.js';\r\nimport './App.css';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <AppWrapper />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}